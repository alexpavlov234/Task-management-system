@using Task_management_system.Areas.Identity
@inject TokenProvider TokenProvider
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">

                <NotAuthorized>
                    <PageTitle>Нямате права</PageTitle>
                    <LayoutView Layout="@typeof(FullscreenLayout)">

                        <div class="flex flex-col justify-center items-center text-center" style="color: white;">

                            <i class="fa-solid fa-ban mb-2 text-center" style="font-size: 100px"></i>
                            <div class="mb-2 text-center"><b>Отказан достъп</b></div>
                            <div class="mb-4 text-center">Не Ви е позволено да отворите тази страница.</div>
                            <div class="flex flex-row">
                                <a class="btn flex justify-center gap-2 btn-primary" href="">Към началото</a>
                            </div>
                        </div>

                    </LayoutView>
                </NotAuthorized>

            </AuthorizeRouteView>

        </Found>
        <NotFound>
            <PageTitle>Не е намерен</PageTitle>
            <LayoutView Layout="@typeof(FullscreenLayout)">
                    <div class="flex flex-col justify-center items-center text-center" style="color: white;">

                        <div class="mb-2 text-center" style="font-size: 100px">404</div>
                        <div class="mb-2 text-center"><b>Ами сега...</b></div>
                        <div class="mb-4 text-center">Страницата, която се опитвате да отворите не съществува!</div>
                        <div class="flex flex-row">
                            <a class="btn flex justify-center gap-2 btn-primary" href="">Към началото</a>
                        </div>
                    </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    [Parameter]
    public TokenProvider InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        TokenProvider.XsrfToken = InitialState.XsrfToken;

        return base.OnInitializedAsync();
    }


}