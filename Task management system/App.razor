@using Task_management_system.Areas.Identity
@inject TokenProvider TokenProvider
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </Found>
        <NotFound>
            <PageTitle>Не е намерен</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="container-full">
                    <img class="banner-full" src="img/iStock-1203930843.jpg" alt="Banner">
                    <div class="center-absolute" >
                        <div class="row align-items-center" style="margin-right: 0px; position: absolute;
                                                                   left: 0;
                                                                   top: 50%;
                                                                   transform: translateY(-50%);
                                                                   width: 100%">
                            <div class="text-center col-xxl-6 col-xl-12 col-lg-12 p-3">
                                <h1 style="background: #7030A0; background: linear-gradient(to top left, #7030A0 0%, #00009E 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; font-size: calc(100% + 15vw + 1vh);">404</h1>
                            </div>
                            <div class="text-left col-xxl-6 col-xl-12 col-lg-12 p-5" style="text-align: left">
                                <p style="color: black; font-size: calc(100% + 2vw + 1vh);"><b>Ами сега...</b></p>
                                <p style="font-size: calc(100% + 0.2vw + 1vh);"><span style="color: gray; text-wrap: normal;">Страницата, която се опитвате да отворите, не е налична!</span></p>
                            </div>
                        </div>
                    </div>
                </div>


            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    [Parameter]
    public TokenProvider InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        TokenProvider.XsrfToken = InitialState.XsrfToken;

        return base.OnInitializedAsync();
    }
}