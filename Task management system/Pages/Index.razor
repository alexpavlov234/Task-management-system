@using System.Text
@using Microsoft.AspNetCore.Identity
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Schedule
@using Task_management_system.Interfaces
@using Task_management_system.Models
@using Task_management_system.Pages.Projects
@using Task_management_system.Services
@inject IIssueService IssueService
@inject IJSRuntime JSRuntime
@page "/"



@*
@if (loginState.IsLoggedIn.Equals(false))
{
    NavToLogin();
}
else
{
    <h1 style="text-align:center">Successful Login!</h1>
    <div style="text-align:center">
        <p> Thanks for logging in @loginState.loggedUser.Username!</p>
    </div>
}
*@
<AuthorizeView>
    <Authorized>
        <PageTitle>Моят ден</PageTitle>
        <div class="frame container">
            <img class="banner" src="img/13186366_5125963-ai.svg" alt="Banner">
            <div class="bottom-left">Здравейте, @userFullName</div>
        </div>

        <div class="card-columns" style="margin-right: 1.2em;">
            @if (response != null)
            {



                <div class="custom-card">
                    <div class="card-body">

                        <h5 class="card-title">Времето</h5>

                        <div class="row">
                            <div class="col-6 middle-align">
                                <div class="row">
                                    <p class="weather-city">София</p>
                                </div>
                                <div class="row">
                                    <p class="weather-temp">@((int)response.Temperature.Metric.Value + "°" + response.Temperature.Metric.Unit)</p>
                                </div><div class="row">
                                    <p class="weather-info">@response.WeatherText</p>
                                </div>
                            </div>
                            <div class="col-6 middle-align">
                                <img class="weather-icon" src="@image" alt="Banner">
                            </div>
                        </div>

                    </div>
                    <div class="card-footer">
                        <div class="form-group">
                            <div class="text-right">
                                <a href="@response.Link" class="btn btn-primary">По подробно</a>
                            </div>
                        </div>
                    </div>
                </div>

            }

            <div class="custom-card">
                <div class="card-body">
                    <h5 class="card-title">Задачи за деня</h5>
                    <SfSchedule TValue="Issue" Height="300px" Width="auto" SelectedDate="@DateTime.Now" CurrentView="View.Agenda" ShowHeaderBar="false">
                        <ScheduleEventSettings DataSource="@issues" AllowAdding="false" AllowDeleting="false"></ScheduleEventSettings>
                        <ScheduleViews>
                            <ScheduleView Option="View.Day"></ScheduleView>
                            <ScheduleView Option="View.Week"></ScheduleView>
                            <ScheduleView Option="View.WorkWeek"></ScheduleView>
                            <ScheduleView Option="View.Month"></ScheduleView>
                            <ScheduleView Option="View.Agenda"></ScheduleView>
                        </ScheduleViews>
                    </SfSchedule>
                </div>
                <div class="card-footer">
                    <div class="form-group">
                        <div class="text-right">
                            <a href="/Calendar" class="btn btn-primary">По подробно</a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="custom-card">
                <div class="card-body">

                    <h5 class="card-title">Час и дата</h5>

                    <div class="row">
                        <div class="col-sm-12 middle-align">
                            <div>
                                <p @ref="timeDiv" class="weather-temp"></p>
                            </div><div>
                                <p @ref="dateDiv" class="weather-info"></p>
                            </div>
                        </div>

                    </div>

                </div>

            </div>
            <div class="custom-card">
                <div class="card-body">
                    <h5 class="card-title">Търсене</h5>
                    <Search ShowHeader="false"></Search>
                </div>

            </div>
            <div class="custom-card">
                <div class="card-body">
                    <h5 class="card-title">Проекти</h5>
                    <Projects ShowHeader="false"></Projects>
                </div>
                <div class="card-footer">
                    <div class="form-group">
                        <div class="text-right">
                            <a href="/Projects" class="btn btn-primary">По подробно</a>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <style>
            .card-columns {
                column-count: 2;
            }

            @@media (max-width: 852px) {
                .card-columns {
                    column-count: 1;
                }
            }
        </style>
    </Authorized>

    <NotAuthorized>
        <PageTitle>Система за управление на задачи</PageTitle>
        <div>

            <div class="flex flex-col justify-center items-center text-center" style="color: white;">

                <div class="mb-2 text-center" style="font-size: 100px">СУЗ</div>
                <div class="mb-2 text-center"><b>Система за управление на задачи</b></div>
                <div class="mb-4 text-center">Влезте в профила си, за да продължите</div>
                <div class="flex flex-row gap-5">
                    <a class="btn flex justify-center gap-2 btn-primary" href="Identity/Account/Login">Вход</a>

                    <a class="btn flex justify-center gap-2 btn-primary" href="Identity/Account/Register">Регистрация</a>
                </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>


<style>
    .e-quick-popup-wrapper .e-popup-footer .e-event-edit, .e-quick-popup-wrapper .e-popup-footer .e-event-delete {
        display: none;
    }

</style>

@code {

    String userFullName = null;
    [Inject]
    private IUserService userService { get; set; }
    private List<Issue> issues { get; set; }
    CurrentCondition response;
    String image = "";
    String result = "";
    protected override async Task OnInitializedAsync()
    {
        issues = IssueService.GetAllIssues();
        if (userService.GetLoggedUser() != null)
        {
            var user = userService.GetLoggedUser();
            userFullName = user.FirstName + " " + user.LastName;
        }
        //try
        //{
        //    CurrentConditions currentConditions = new CurrentConditions("bXyjKZghQjnIwBB2WKEHdNsVyZdaJECK", "bg-bg");
        //    result = await currentConditions.Get(51097, false);
        //    response = currentConditions.ConvertData(result);
        //}
        //catch
        //{
            response = new CurrentCondition();
            response.Temperature = new Temperature();
            response.Temperature.Metric = new Metric();

            response.Temperature.Metric.Value = 12;
            response.Temperature.Metric.Unit = "C";
            response.WeatherText = "Гръмотевични бури";
            response.WeatherIcon = 17;
            response.Link = "https://www.accuweather.com/bg/bg/sofia/51097/weather-forecast/51097";
        //}
        image = "img/icons/" + response.WeatherIcon + ".svg";

    }
    public async void GetWeather()
    {

        StateHasChanged();
    }

    string theTime;
    string theDate;
    Timer aTimer;

    ElementReference timeDiv;
    ElementReference dateDiv;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("startTime1", timeDiv);
            await JSRuntime.InvokeVoidAsync("startTime2", dateDiv);
        }
    }

    public void Dispose()
    {
        JSRuntime.InvokeVoidAsync("stopTime");
    }
}

