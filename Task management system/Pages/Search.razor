@page "/Search"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.PdfExport
@using Task_management_system.Areas.Identity
@using Task_management_system.Data
@using Task_management_system.Interfaces
@using Task_management_system.Models
@using Task_management_system.Pages
@using Task_management_system.Pages.Shared
@using System.Globalization
@using Task_management_system.Pages.Issues
@using Task_management_system.Pages.Projects
@using ChangeEventArgs = Microsoft.AspNetCore.Components.ChangeEventArgs
@attribute [Authorize(Roles = "Admin,User")]
<div class="content-wrapper">
    <div>
        @if (ShowHeader)
        {
            <div class="frame container">
                <img class="banner" style="transform: scale(3);" src="img/Search-01.svg" alt="Banner">
                <div class="bottom-left">
                    <h3>Търсене</h3>
                    <nav class="navbar navbar-expand">
                        <div class="form-control">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <div class="btn btn-outline-primary">
                                        <i class="fa-solid fa-magnifying-glass"></i>
                                    </div>
                                </div>
                                <input type="text" @bind-value="query" @bind-value:event="oninput" class="form-control" @onkeydown="@(e => { if (e.Key == "Enter") SearchInput(); })" />
                                <div class="input-group-append">
                                    <button type="button" @onclick="SearchInput" class="btn btn-primary">
                                        Търсене
                                    </button>
                                </div>
                            </div>
                        </div>
                    </nav>
                </div>
            </div>
            <div class="m-3">
                <div class="row m-0">
                    <div class="col-sm-12">
                        <h5>Резултат</h5>
                        <div class="project-issue-list">
                            <ul class="search-list">
                                @if (itemsResult.Any())
                                {
                                    @foreach (var item in itemsResult)
                                    {
                                        @if (item is Project project)
                                        {
                                            <li class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px">
                                                <div style="width: 45%; display: flex; align-items: center">
                                                    <div class="p-2">
                                                        <i class="fa-solid fa-clone fa-lg" style="color: darkcyan"></i>
                                                    </div>
                                                    &nbsp;
                                                    &nbsp;
                                                    <div style=" overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
                                                        @project.ProjectName
                                                    </div>
                                                </div>
                                                <div class="vr hide840 mx-1"></div>
                                                @if (project.Issues.Count() != 0)
                                                {
                                                    <div class="progress hide1100 mx-2" style="width: 220px; border-radius: 20.25rem;">
                                                        <div class="progress-bar hide1100" role="progressbar" aria-label="Завършени задачи" style="width: @((project.Issues == null ? 0 : Convert.ToDouble(project.Issues.Count(x => x.Status == "Затворена")) / (project.Issues.Count()) * 100).ToString().Replace(',', '.'))%; background-color: #4f9b00" aria-valuenow="@(project.Issues == null ? 0 : (project.Issues.Count(x => x.Status == "Затворена") / project.Issues.Count()) * 100)" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <label class="hide840 mx-2" style="color: gray; text-align: center;">@(project.Issues == null ? 0 : project.Issues.Count(x => x.Status == "Затворена") / project.Issues.Count())/@(project.Issues == null ? 0 : project.Issues.ToArray().Length) завършени задачи </label>
                                                }
                                                else
                                                {
                                                    <label class="hide840 mx-2" style="color: gray; text-align: center;">Няма добавени задачи </label>
                                                }
                                                <div class="vr hide840 mx-1"></div>
                                                <div>
                                                    <div @key="project.ProjectId" style="display: flex">
                                                        @if (IsProjectEditable(project))
                                                        {
                                                            <SfTooltip Position="Position.BottomCenter" Content="Редактиране" OpensOn="Hover">
                                                                <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => EditProject(project))">
                                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                                </button>
                                                            </SfTooltip>
                                                            <SfTooltip Position="Position.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                                                <button type="button" class="btn btn-outline-danger waves-effect md-trigger m-1" @onclick="(() => DeleteProject(project))">
                                                                    <i class="fa-solid fa-trash"></i>
                                                                </button>
                                                            </SfTooltip>
                                                        }
                                                        else
                                                        {
                                                            <SfTooltip Position="Position.BottomCenter" Content="Преглед" OpensOn="Hover">
                                                                <button type="button" class="btn btn-outline-primary waves-effect md-trigger m-1" @onclick="(() => EditProject(project))">
                                                                    <i class="fa-solid fa-eye"></i>
                                                                </button>
                                                            </SfTooltip>
                                                        }
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                        else if (item is Issue issue)
                                        {
                                            <li class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px">
                                                <div style="width: 45%; display: flex; align-items: center">
                                                    <div class="p-2">
                                                        <i class="fa-solid fa-list-check fa-lg" style="color: darkcyan"></i>
                                                    </div>
                                                    &nbsp;
                                                    &nbsp;
                                                    <div style=" overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
                                                        @issue.Subject
                                                    </div>
                                                </div>
                                                <div class="vr hide840 mx-1"></div>
                                                @if (issue.Subtasks != null)
                                                {
                                                    @if (issue.Subtasks.Count() != 0)
                                                    {
                                                        <div class="progress hide1100 mx-2" style="width: 220px; border-radius: 20.25rem;">
                                                            <div class="progress-bar hide1100" role="progressbarsubtasks" aria-label="Завършени подзадачи" style="width: @((issue.Subtasks == null ? 0 : Convert.ToDouble(issue.Subtasks.Where(x => x.Status == "Затворена").Count()) / (issue.Subtasks.Count()) * 100).ToString().Replace(',', '.'))%; background-color: #4f9b00" aria-valuenow="@(issue.Subtasks == null ? 0 : (issue.Subtasks.Where(x => x.Status == "Затворена").Count() / issue.Subtasks.Count()) * 100)" aria-valuemin="0" aria-valuemax="100"></div>
                                                        </div>
                                                        <label class="hide840 mx-2" style="color: gray; text-align: center;">@(issue.Subtasks == null ? 0 : (issue.Subtasks.Count() == 0 ? 0 : issue.Subtasks.Where(x => x.Status == "Затворена").Count()))/@(issue.Subtasks == null ? 0 : issue.Subtasks.ToArray().Length) завършени подзадачи </label>
                                                    }
                                                    else
                                                    {
                                                        <label class="hide840 mx-2" style="color: gray; text-align: center;">Няма добавени подзадачи </label>
                                                    }
                                                }
                                                else
                                                {
                                                    <label style="color: gray">Няма добавени подзадачи </label>
                                                }
                                                <div class="vr hide840 mx-1"></div>
                                                <div style="display: flex">
                                                    <SfTooltip Position="Position.BottomCenter" Content="Редактиране" OpensOn="Hover">
                                                        <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => EditIssue(issue))">
                                                            <i class="fa-solid fa-pen-to-square"></i>
                                                        </button>
                                                    </SfTooltip>
                                                    <SfTooltip Position="Position.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                                        <button type="button" class="btn btn-outline-danger waves-effect md-trigger m-1" @onclick="(() => DeleteIssue(issue))">
                                                            <i class="fa-solid fa-trash"></i>
                                                        </button>
                                                    </SfTooltip>
                                                </div>
                                            </li>
                                        }
                                    }
                                }
                                else
                                {
                                    <li class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px">
                                        <label style="color: gray">Няма намерени съответствия!</label>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <nav class="navbar navbar-expand">
                <div class="form-control">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="btn btn-outline-primary">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </div>
                        </div>
                        <input type="text" @bind-value="query" @bind-value:event="oninput" class="form-control" @onkeydown="@(e => { if (e.Key == "Enter") SearchInput(); })" />
                        <div class="input-group-append">
                            <button type="button" @onclick="SearchInput" class="btn btn-primary">
                                Търсене
                            </button>
                        </div>
                    </div>
                </div>
            </nav>
        }
    </div>
</div>
<style>
    .project-issue-list ul li {
        opacity: 0;
        animation: fadeIn 0.5s ease-in-out forwards;
    }
    @@keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
</style>
<ToastMsg @ref="toast" />
<ProjectModal @ref="projectModal" CallbackAfterSubmit="UpdateAfterManagementModalSubmitAsync" />
<IssueModal @ref="taskModal" CallbackAfterSubmit="UpdateAfterIssueModalSubmitAsync" />
<style>
    .form-control {
        padding: 0.2px 5px;
    }
</style>
