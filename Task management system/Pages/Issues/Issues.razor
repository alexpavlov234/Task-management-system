@page "/Тasks"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Kanban
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.PdfExport
@using Syncfusion.XlsIO;
@using Task_management_system.Areas.Identity
@using Task_management_system.Data
@using Task_management_system.Interfaces
@using Task_management_system.Models
@using Task_management_system.Pages
@using Task_management_system.Pages.Shared
@using System.Globalization
@attribute [Authorize(Roles = "Admin, User")]
<div class="content-wrapper">
    <div class="frame container">
        <img class="banner" src="img/Issues-01.svg" alt="Banner">
        <div class="bottom-left">
            <h3>Задачи</h3>
            <nav class="navbar navbar-expand">
                <!-- Left navbar links -->
                <ul class="navbar-nav float">
                    <li class="nav-item d-sm-inline-block">
                        <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="AddNewTaskClickHandler">Новa задача</button>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
    <div class="m-3">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="@tabsClasses[0]" @onclick="() => ChangeTab(1)">Задачи</a>
            </li>
            <li class="nav-item">
                <a class="@tabsClasses[1]" @onclick="() => ChangeTab(2)">Kanban</a>
            </li>
            <li class="nav-item">
                <a class="@tabsClasses[2]" @onclick="() => ChangeTab(3)">Изглед по приоритет</a>
            </li>
        </ul>
        @switch (TabId)
        {
            case 1:
                <div class="row m-0">
                    <div class="col-sm-12">
                        <div class="project-issue-list">
                            @foreach (var project in projects)
                            {
                                <CollapsibleCard>
                                    <CardHeader>
                                        <li class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; background-color: #f8f8ff">
                                            <div style="max-width: 270px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
                                                @project.ProjectName
                                            </div>
                                            <div class="vr hide840 mx-1"></div>
                                            @if (project.Issues.Count() != 0)
                                            {
                                                <div class="progress hide1100 mx-2" style="width: 220px; border-radius: 20.25rem;">
                                                    <div class="progress-bar hide1100" role="progressbar" aria-label="Завършени задачи" style="width: @((project.Issues == null ? 0 : Convert.ToDouble(project.Issues.Where(x => x.Status == "Затворена").Count()) / (project.Issues.Count()) * 100).ToString().Replace(',', '.'))%; background-color: #4f9b00" aria-valuenow="@(project.Issues == null ? 0 : (project.Issues.Where(x => x.Status == "Затворена").Count() / project.Issues.Count()) * 100)" aria-valuemin="0" aria-valuemax="100"></div>
                                                </div>
                                                <label class="hide840 mx-2" style="color: gray; text-align: center;">@(project.Issues == null ? 0 : project.Issues.Where(x => x.Status == "Затворена").Count())/@(project.Issues == null ? 0 : project.Issues.Count()) завършени задачи </label>
                                            }
                                            else
                                            {
                                                <label class="hide840 mx-2" style="color: gray; text-align: center;">Няма добавени задачи </label>
                                            }
                                            <div class="vr hide840 mx-1"></div>
                                            <div style="display: flex" class="hide350">
                                                <SfTooltip Position="Position.BottomCenter" Content="Експортиране на задачи" OpensOn="Hover">
                                                    <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => ExportIssues(project))">
                                                        <i class="fa-solid fa-download"></i>
                                                    </button>
                                                </SfTooltip>
                                                <SfTooltip Position="Position.BottomCenter" Content="Импортиране на задачи" OpensOn="Hover">
                                                    <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => ImportIssues(project))">
                                                        <i class="fa-solid fa-arrow-up-from-bracket"></i>
                                                    </button>
                                                </SfTooltip>
                                                <SfTooltip Position="Position.BottomCenter" Content="Нова задача" OpensOn="Hover">
                                                    <button type="button" class="btn btn-outline-primary waves-effect md-trigger m-1" @onclick="(() => AddIssueToProject(project))">
                                                        <i class="fa-solid fa-plus"></i>
                                                    </button>
                                                </SfTooltip>
                                            </div>
                                        </li>
                                    </CardHeader>
                                    <CardBody>
                                        <div style="border-top-width: 1px; background-color: #f8f8ff" class="my-2 show350 list-group-item rounded d-flex justify-content-between align-items-center">
                                            <SfTooltip Position="Position.BottomCenter" Content="Експортиране на задачи" OpensOn="Hover">
                                                <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => ExportIssues(project))">
                                                    <i class="fa-solid fa-download"></i>
                                                </button>
                                            </SfTooltip>
                                            <SfTooltip Position="Position.BottomCenter" Content="Импортиране на задачи" OpensOn="Hover">
                                                <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => ImportIssues(project))">
                                                    <i class="fa-solid fa-arrow-up-from-bracket"></i>
                                                </button>
                                            </SfTooltip>
                                            <SfTooltip Position="Position.BottomCenter" Content="Нова задача" OpensOn="Hover">
                                                <button type="button" class="btn btn-outline-primary waves-effect md-trigger m-1" @onclick="(() => AddIssueToProject(project))">
                                                    <i class="fa-solid fa-plus"></i>
                                                </button>
                                            </SfTooltip>
                                        </div>
                                        @if (project.Issues != null)
                                        {
                                            @if (project.Issues.Count() != 0)
                                            {
                                                @foreach (var issue in project.Issues)
                                                {
                                                    <li class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px">
                                                        <div style="width:  450px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
                                                            @issue.Subject
                                                        </div>
                                                        <div class="vr hide840 mx-1"></div>
                                                        @if (issue.Subtasks != null)
                                                        {
                                                            @if (issue.Subtasks.Count() != 0)
                                                            {
                                                                <div class="progress hide1100 mx-2" style="width: 220px; border-radius: 20.25rem;">
                                                                    <div class="progress-bar hide1100" role="progressbarsubtasks" aria-label="Завършени подзадачи" style="width: @((issue.Subtasks == null ? 0 : Convert.ToDouble(issue.Subtasks.Where(x => x.Status == "Затворена").Count()) / (issue.Subtasks.Count()) * 100).ToString().Replace(',', '.'))%; background-color: #4f9b00" aria-valuenow="@(issue.Subtasks == null ? 0 : (issue.Subtasks.Where(x => x.Status == "Затворена").Count() / issue.Subtasks.Count()) * 100)" aria-valuemin="0" aria-valuemax="100"></div>
                                                                </div>
                                                                <label class="hide840 mx-2" style="color: gray; text-align: center;">@(issue.Subtasks == null ? 0 : (issue.Subtasks.Count() == 0 ? 0 : issue.Subtasks.Where(x => x.Status == "Затворена").Count()))/@(issue.Subtasks == null ? 0 : issue.Subtasks.ToArray().Length) завършени подзадачи </label>
                                                            }
                                                            else
                                                            {
                                                                <label class="hide840 mx-2" style="color: gray; text-align: center;">Няма добавени подзадачи </label>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <label style="color: gray">Няма добавени подзадачи </label>
                                                        }
                                                        <div class="vr hide840 mx-1"></div>
                                                        <div style="display: flex">
                                                            <SfTooltip Position="Position.BottomCenter" Content="Редактиране" OpensOn="Hover">
                                                                <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => EditIssue(issue))">
                                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                                </button>
                                                            </SfTooltip>
                                                            @if (issue.AssigneeId == loggedUser.Id)
                                                            {
                                                                <SfTooltip Position="Position.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                                                    <button type="button" class="btn btn-outline-danger waves-effect md-trigger m-1" @onclick="(() => DeleteIssue(issue))">
                                                                        <i class="fa-solid fa-trash"></i>
                                                                    </button>
                                                                </SfTooltip>
                                                            }
                                                        </div>
                                                    </li>
                                                }
                                            }
                                            else
                                            {
                                                <li class="list-group-item rounded d-flex align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px; text-align: center;">
                                                    <label style="color: gray">Няма задачи в този проект!</label>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li class="list-group-item rounded d-flex align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px; text-align: center;">
                                                <label style="color: gray">Няма задачи в този проект!</label>
                                            </li>
                                        }
                                    </CardBody>
                                </CollapsibleCard>
                            }
                            @if (this.issues.Count() == 0 && this.projects.Count() == 0)
                            {
                                <li class="list-group-item rounded d-flex mt-3 align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px; text-align: center;">
                                    <label style="color: gray">Няма създадени задачи!</label>
                                </li>
                            }
                        </div>
                    </div>
                </div>
                break;
            case 2:
                <SfKanban @ref="sfKanban" KeyField="Status" DataSource="issues">
                    <KanbanColumns>
                        @foreach (Syncfusion.Blazor.Kanban.ColumnModel item in columnData)
                        {
                            <KanbanColumn HeaderText="@item.HeaderText" KeyField="@item.KeyField"></KanbanColumn>
                        }
                    </KanbanColumns>
                    <KanbanEvents TValue="Issue" ActionComplete="@ActionCompleteHandler" DialogOpen="@OnDialogOpen"></KanbanEvents>
                    <KanbanCardSettings HeaderField="Subject" ContentField="Description"></KanbanCardSettings>
                </SfKanban>
                break;
            case 3:
                <div class="m-3">
                    <div class="row m-0">
                        <div class="col-sm-12">
                            <div class="project-issue-list">
                                @foreach (var priorityType in priorityTypes)
                                {
                                    <CollapsibleCard>
                                        <CardHeader>
                                            @if (priorityType.Name == "Висок")
                                            {
                                                <div class="e-message e-error p-2" style="font-size: 20px">@priorityType.Name</div>
                                            }
                                            else if (priorityType.Name == "Нормален")
                                            {
                                                <div class="e-message e-warning p-2" style="font-size: 20px">@priorityType.Name</div>
                                            }
                                            else
                                            {
                                                <div class="e-message e-primary p-2" style="font-size: 20px">@priorityType.Name</div>
                                            }
                                        </CardHeader>
                                        <CardBody>
                                            <ul class="list-group">
                                                @{
                                                    var hasItems = false;
                                                }
                                                @foreach (var issue in issues)
                                                {
                                                    @if (issue.Priority == priorityType.Name)
                                                    {
                                                        hasItems = true;
                                                        <li class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px">
                                                            <div style="width:  450px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;">
                                                                @issue.Subject
                                                            </div>
                                                            <div class="vr hide840 mx-1"></div>
                                                            @if (issue.Subtasks != null)
                                                            {
                                                                @if (issue.Subtasks.Count() != 0)
                                                                {
                                                                    <div class="progress hide1100 mx-2" style="width: 220px; border-radius: 20.25rem;">
                                                                        <div class="progress-bar hide1100" role="progressbarsubtasks" aria-label="Завършени подзадачи" style="width: @((issue.Subtasks == null ? 0 : Convert.ToDouble(issue.Subtasks.Where(x => x.Status == "Затворена").Count()) / (issue.Subtasks.Count()) * 100).ToString().Replace(',', '.'))%; background-color: #4f9b00" aria-valuenow="@(issue.Subtasks == null ? 0 : (issue.Subtasks.Where(x => x.Status == "Затворена").Count() / issue.Subtasks.Count()) * 100)" aria-valuemin="0" aria-valuemax="100"></div>
                                                                    </div>
                                                                    <label class="hide840 mx-2" style="color: gray; text-align: center;">@(issue.Subtasks == null ? 0 : (issue.Subtasks.Count() == 0 ? 0 : issue.Subtasks.Where(x => x.Status == "Затворена").Count()))/@(issue.Subtasks == null ? 0 : issue.Subtasks.ToArray().Length) завършени подзадачи </label>
                                                                }
                                                                else
                                                                {
                                                                    <label class="hide840 mx-2" style="color: gray; text-align: center;">Няма добавени подзадачи </label>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <label style="color: gray">Няма добавени подзадачи </label>
                                                            }
                                                            <div class="vr hide840 mx-1"></div>
                                                            <div style="display: flex">
                                                                <SfTooltip Position="Position.BottomCenter" Content="Редактиране" OpensOn="Hover">
                                                                    <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => EditIssue(issue))">
                                                                        <i class="fa-solid fa-pen-to-square"></i>
                                                                    </button>
                                                                </SfTooltip>
                                                                @if (issue.AssigneeId == loggedUser.Id)
                                                                {
                                                                    <SfTooltip Position="Position.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                                                        <button type="button" class="btn btn-outline-danger waves-effect md-trigger m-1" @onclick="(() => DeleteIssue(issue))">
                                                                            <i class="fa-solid fa-trash"></i>
                                                                        </button>
                                                                    </SfTooltip>
                                                                }
                                                            </div>
                                                        </li>
                                                    }
                                                }
                                                @if (!hasItems)
                                                {
                                                    <div class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px">
                                                        <label style="color: gray">Няма задачи с такъв приоритет!</label>
                                                    </div>
                                                }
                                            </ul>
                                        </CardBody>
                                    </CollapsibleCard>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                break;
        }
    </div>
</div>
<ToastMsg @ref="toast" />
<IssueModal @ref="taskModal" CallbackAfterSubmit="UpdateAfterIssueModalSubmitAsync" />
<ImportIssuesModal @ref="importIssuesModal" CallbackAfterSubmit="UpdateAfterImportIssuesModalSubmitAsync" />
