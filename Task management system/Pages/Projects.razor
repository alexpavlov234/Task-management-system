@page "/Projects"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.PdfExport
@using Task_management_system.Areas.Identity
@using Task_management_system.Data
@using Task_management_system.Interfaces
@using Task_management_system.Models
@using Task_management_system.Pages.Common
@using Task_management_system.Pages
@using Task_management_system.Pages.Shared
@inject RoleManager<IdentityRole> roleManager
@inject UserManager<ApplicationUser> userManager
@inject SignInManager<ApplicationUser> signInManager
@inject IKeyValueService keyValueService
@inject IProjectService projectService
@attribute [Authorize(Roles = "Admin")]

<div class="content-wrapper">


    <div>

        <div class="frame container">
            <img class="banner" src="img/iStock-1203930843.jpg" alt="Banner">
            <div class="bottom-left">

                <h3>Проекти</h3>
                <nav class="navbar navbar-expand">
                    <!-- Left navbar links -->
                    <ul class="navbar-nav float">
                        <li class="nav-item d-none d-sm-inline-block">
                            <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="AddNewProjectClickHandler">Нов проект</button>


                        </li>
                        <li class="nav-item d-none d-sm-inline-block">
                            &nbsp;
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <div class="m-3">
            <div class="row m-0">
                <div class="col-sm-12">

                    <div class="project-issue-list">

                        @foreach (var projectType in projectTypes)
                        {


                            <CollapsibleCard>
                                <CardHeader>
                                    @if (projectType.Name == "Учебен")
                                    {
                                        <div class="e-message e-success p-2 my-2" style="font-size: 18px">@projectType.Name</div>

                                    }
                                    else if (projectType.Name == "Работен")
                                    {
                                        <div class="e-message e-warning p-2 my-2" style="font-size: 18px">@projectType.Name</div>

                                    }
                                    else
                                    {
                                        <div class="e-message e-error p-2 my-2" style="font-size: 18px">@projectType.Name</div>

                                    }
                                </CardHeader>
                                <CardBody>
                                    <ul class="list-group">
                                        <!-- Project 1 -->
                                        @foreach (var project in projects)
                                        {
                                            @if (project.ProjectType.KeyValueIntCode == projectType.KeyValueIntCode)
                                            {
                                                <li class="list-group-item rounded d-flex justify-content-between align-items-center" style="border-top-width: 1px; margin-top: 2px; margin-bottom: 2px">
                                                    <div style="width: 200px">
                                                        @project.ProjectName
                                                    </div>
                                                    <div class="vr"></div>
                                                    <div class="progress" style="width: 220px; border-radius: 20.25rem;">
                                                        <div class="progress-bar" role="progressbar" aria-label="Example with label" style="width: 25%; background-color: #4f9b00" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <label style="color: gray">4/@(project.Tasks == null ? 0 : project.Tasks.ToArray().Length) завършени задачи </label>
                                                    <div class="vr"></div>
                                                    <div>
                                                        <div style="display: flex">
                                                            <SfTooltip Position="Position.BottomCenter" Content="Редактиране" OpensOn="Hover">
                                                                <button type="button" class="btn btn-outline-warning waves-effect md-trigger m-1" @onclick="(() => EditProject(project))">
                                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                                </button>
                                                            </SfTooltip>
                                                            <SfTooltip Position="Position.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                                                <button type="button" class="btn btn-outline-danger waves-effect md-trigger m-1" @onclick="(() => DeleteProject(project))">
                                                                    <i class="fa-solid fa-trash"></i>
                                                                </button>
                                                            </SfTooltip>
                                                        </div>
                                                    </div>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </CardBody>
                            </CollapsibleCard>




                            @*

                        <SfGrid DataSource="@projects.Where(x => x.ProjectType.KeyValueIntCode == projectType.KeyValueIntCode)"
                        AllowPaging="true"
                        PageSettings.PageSize="10">
                        <GridColumns>
                        <GridColumn Width="40px">
                        <Template>
                        <SfTooltip Position="Position.BottomCenter" Content="Редактиране" OpensOn="Hover">
                        <button type="button" class="btn btn-outline-warning waves-effect md-trigger" @onclick="(() => EditProject(context as Project))">
                        <i class="fa-solid fa-pen-to-square"></i>
                        </button>
                        </SfTooltip>
                        </Template>
                        </GridColumn>
                        <GridColumn Width="40px">
                        <Template>
                        <SfTooltip Position="Position.BottomCenter" Content="Изтриване" OpensOn="Hover">
                        <button type="button" class="btn btn-outline-danger waves-effect md-trigger" @onclick="(() => DeleteProject(context as Project))">
                        <i class="fa-solid fa-trash"></i>
                        </button>
                        </SfTooltip>
                        </Template>
                        </GridColumn>
                        <GridColumn Field="ProjectName" HeaderText="Име" Width="100px" />
                        <GridColumn Field="ProjectDescription" HeaderText="Описание" Width="150px" />
                        <GridColumn Field="StartDate" HeaderText="Начална дата" Width="40px" Format="dd.MM.yyyy" />
                        <GridColumn Field="EndDate" HeaderText="Крайна дата" Width="40px" Format="dd.MM.yyyy" />
                        </GridColumns>
                        </SfGrid>
                        *@
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<ProjectModal @ref="projectModal" CallbackAfterSubmit="UpdateAfterProjectModalSubmitAsync" />


@code {
    //https://learn.microsoft.com/en-us/aspnet/core/blazor/security/?view=aspnetcore-7.0

    private List<KeyValue> projectTypes { get; set; }
    private List<Project> projects { get; set; }
    private ProjectModal projectModal = new ProjectModal();



    protected async override Task OnInitializedAsync()
    {
        projectTypes = keyValueService.GetAllKeyValuesByKeyType("ProjectType");
        projects = projectService.GetAllProjects();

    }
    private async Task AddNewProjectClickHandler()
    {

        projectModal.OpenDialog(new Project { StartDate = DateTime.Now, EndDate = DateTime.Now.AddMonths(1), ProjectParticipants = new List<ApplicationUser>() });
    }
    private async Task UpdateAfterProjectModalSubmitAsync()
    {
        projectTypes = keyValueService.GetAllKeyValuesByKeyType("ProjectType");
        projects = projectService.GetAllProjects();
        this.StateHasChanged();
    }
    private async Task DeleteProject(Project project)
    {

        projectService.DeleteProject(project);
        projectTypes = keyValueService.GetAllKeyValuesByKeyType("ProjectType");
        projects = projectService.GetAllProjects();
        this.StateHasChanged();

    }

    private async Task EditProject(Project project)
    {
        projectModal.OpenDialog(project);
        //  managementModal.OpenDialog(applicationUser);
    }

}
