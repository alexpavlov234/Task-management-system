@page "/Management"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@using Syncfusion.Blazor.Popups
@using Syncfusion.PdfExport
@using Task_management_system.Areas.Identity
@using Task_management_system.Data
@using Task_management_system.Interfaces
@using Task_management_system.Pages.Shared
@attribute [Authorize(Roles = "Admin")]
<div class="frame container">
    <img class="banner" src="img/Users-01.svg" alt="Banner">
    <div class="bottom-left">
        <h3>Потребители</h3>
        <nav class="navbar navbar-expand">
            <!-- Left navbar links -->
            <ul class="navbar-nav float">
                <li class="nav-item d-sm-inline-block">
                    <button type="button" class="btn btn-primary btn-outline-primary waves-effect md-trigger" @onclick="AddApplicationUser" disabled="@(this.DisableAllFields)">Нов потребител</button>
                </li>
            </ul>
        </nav>
    </div>
</div>
<div class="card-body">
    <div class="row">
        <div class="col-sm-12">
            <SfGrid ID="usersGrid" DataSource="users" AllowSorting="true" AllowFiltering=true EnableAltRow="true" EnableHover="false"
                    AllowTextWrap="true" @ref="usersGrid" AllowSelection="true" Toolbar="@(new List<string>() { "ExcelExport", "PdfExport" })"
                    AllowExcelExport="true" AllowPdfExport="true" AllowPaging="true" ContextMenuItems="@(new List<object>() { "AutoFit", "AutoFitAll", "SortAscending", "SortDescending", "FirstPage", "PrevPage","LastPage", "NextPage"})">
                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                <GridPageSettings PageCount="5" PageSize=20 PageSizes="true"></GridPageSettings>
                <GridEvents OnToolbarClick="ToolbarClick" TValue="ApplicationUser"></GridEvents>
                <GridColumns>
                    <GridColumn Field=@nameof(ApplicationUser.UserName) HeaderText="Потребителско име" IsPrimaryKey="true" Width="160px">
                        <Template>
                            @{
                                var user = (context as ApplicationUser);
                                if (string.IsNullOrEmpty(user.UserName))
                                {
                                    @("-")
                                }
                                else
                                {
                                    @user.UserName
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(ApplicationUser.FirstName) HeaderText="Име" HideAtMedia="(min-width: 1120px)" Width="120px">
                        <Template>
                            @{
                                var user = (context as ApplicationUser);
                                if (string.IsNullOrEmpty(user.FirstName))
                                {
                                    @("-")
                                }
                                else
                                {
                                    @user.FirstName
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(ApplicationUser.LastName) HeaderText="Фамилия" HideAtMedia="(min-width: 1120px)" Width="120px">
                        <Template>
                            @{
                                var user = (context as ApplicationUser);
                                if (string.IsNullOrEmpty(user.LastName))
                                {
                                    @("-")
                                }
                                else
                                {
                                    @user.LastName
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(ApplicationUser.Email) HeaderText="Имейл" Width="200px">
                        <Template>
                            @{
                                var user = (context as ApplicationUser);
                                if (string.IsNullOrEmpty(user.Email))
                                {
                                    @("-")
                                }
                                else
                                {
                                    @user.Email
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(ApplicationUser.PhoneNumber) HeaderText="Телефон"  HideAtMedia="(min-width: 1300px)" Width="150px">
                        <Template>
                            @{
                                var user = (context as ApplicationUser);
                                if (string.IsNullOrEmpty(user.PhoneNumber))
                                {
                                    @("-")
                                }
                                else
                                {
                                    @user.PhoneNumber
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn HeaderText="Роля" HideAtMedia="(min-width: 900px)" Width="180px">
                        <Template>
                            @{
                                var user = (context as ApplicationUser);
                                if (userRoles.Any() && userRoles.ContainsKey(user.UserName))
                                {
                                    string role = userRoles[user.UserName];
                                    @role
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Width="60px">
                        <Template>
                            <SfTooltip Position="Position.BottomCenter" Content="Редактиране" OpensOn="Hover">
                                <button type="button" class="btn btn-outline-warning waves-effect md-trigger" @onclick="(() => EditUser(context as ApplicationUser))">
                                    <i class="fa-solid fa-pen-to-square"></i>
                                </button>
                            </SfTooltip>
                        </Template>
                    </GridColumn>
                    <GridColumn Width="60px">
                        <Template>
                            <SfTooltip Position="Position.BottomCenter" Content="Изтриване" OpensOn="Hover">
                                <button type="button" class="btn btn-outline-danger waves-effect md-trigger" @onclick="(() => DeleteUser(context as ApplicationUser))">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </SfTooltip>
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>
<ToastMsg @ref="toast" />
<ManagementModal @ref="managementModal" CallbackAfterSubmit="UpdateAfterManagementModalSubmitAsync" />
